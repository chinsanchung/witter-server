{"version":3,"sources":["context/AuthContext.tsx","components/ProfileImage.tsx","components/Buttons/Comment.tsx","components/Buttons/Retweet.tsx","components/Buttons/Heart.tsx","components/Buttons/Share.tsx","components/Tweet/SmallTweet.tsx","components/Tweet/TweetList.tsx","util/createRandomTweetId.ts","pages/Home/AddTweet.tsx","components/Header/JoinButton.tsx","components/Header/LoginButton.tsx","components/Header/LogoutButton.tsx","components/Header/Header.tsx","pages/Home/index.tsx","assets/Logo blue.svg","components/AuthButton.tsx","components/AuthInput.tsx","pages/Join/index.tsx","pages/Login/index.tsx","components/Buttons/FollowButton.tsx","pages/User/UserProfile.tsx","pages/User/index.tsx","pages/Main/index.tsx","components/Tweet/DetailTweet.tsx","pages/Tweet/AddComment.tsx","pages/Tweet/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialState","isLogin","user","user_id","name","follower","following","profile_color","description","AuthContext","createContext","useAuthContext","context","useContext","Error","authReducer","prevState","action","type","payload","console","log","AuthProvider","children","useReducer","store","authDispath","Provider","value","Container","styled","div","Profile","props","size","css","color","ProfileImage","history","useHistory","moveToUserTimeLine","useCallback","e","preventDefault","stopPropagation","push","onClick","Icon","FontAwesomeIcon","CountWrapper","Comment","comments","showCount","comments_count","useMemo","length","icon","faComment","isactive","Retweet","retweet","tweet_id","onChangeTimeLine","isActive","includes","retweet_count","onChangeRetweet","a","alert","apiUrl","axios","patch","response","data","status","headers","faRetweet","Heart","like","like_count","onChangeLike","activeHeart","nonActiveHeart","Share","faExternalLinkAlt","Wrapper","ContentsArea","UserName","span","UserId","ButtonWrapper","SmallTweet","moveToDetailPage","className","style","display","marginRight","marginTop","contents","TweetList","map","idx","createRandomTweetId","time","Date","getTime","randomNumber","Math","floor","random","parseInt","Input","input","SubmitButton","Button","AddTweet","useState","setContents","inputContents","target","onSubmit","post","placeholder","onChange","maxLength","button","JoinButton","moveToPage","LoginButton","LogoutButton","authDispatch","onStartLogout","get","Header","marginLeft","Home","authStore","mutate","useSWRConfig","useSWR","url","then","res","error","useEffect","AuthButton","text","AuthInput","WrapperDiv","LogoSvg","img","Join","userId","setUserId","setName","email","setEmail","password","setPassword","inputUserId","inputName","inputEmail","inputPassword","src","logo","JoinWrapper","Login","seEmail","loading","setLoading","moveToJoin","isFollow","ProfileEditButton","FollowButton","login_user_id","target_user_id","isLoginedUserProfile","onChangeStatus","onChangeFollowStatus","moveToEditPage","ProfileWrapper","DescriptionWrapper","FollowButtonWrapper","FollowCountWrapper","CountArea","UserProfile","follower_count","following_count","User","params","useParams","userid","provider","Map","timeLine","Main","ProfileArea","CountsWrapper","DetailTweet","onChangeTweet","create_date","AddComment","target_tweet_id","Tweet","tweetid","origin","App","sessionLogin","setTimeout","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","withCredentials","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bb04fab.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from 'react';\r\nimport { IMedia } from '../types';\r\n\r\ninterface IUserProps {\r\n  isLogin: boolean;\r\n  user: {\r\n    user_id: string;\r\n    name: string;\r\n    // join_date: string;\r\n    follower: string[];\r\n    following: string[];\r\n    profile_color: string;\r\n    description: string;\r\n  };\r\n}\r\nconst initialState: IUserProps = {\r\n  isLogin: false,\r\n  user: {\r\n    user_id: '',\r\n    name: '',\r\n    follower: [],\r\n    following: [],\r\n    profile_color: '#17517e',\r\n    description: '',\r\n  },\r\n};\r\n\r\nexport const AuthContext = createContext(initialState);\r\n\r\nexport function useAuthContext() {\r\n  const context = useContext(AuthContext);\r\n  if (!context) throw new Error('AuthContext 없음.');\r\n  return context;\r\n}\r\n\r\n// @ts-ignore\r\nconst authReducer = (prevState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN': {\r\n      return {\r\n        isLogin: true,\r\n        user: action.payload,\r\n      };\r\n    }\r\n    case 'LOGOUT': {\r\n      return {\r\n        isLogin: false,\r\n        user: {\r\n          user_id: '',\r\n          name: '',\r\n          follower: [],\r\n          following: [],\r\n          profile_color: '#17517e',\r\n          description: '',\r\n        },\r\n      };\r\n    }\r\n    default: {\r\n      console.log('context 에러');\r\n      return prevState;\r\n    }\r\n  }\r\n};\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactChild }) {\r\n  const [store, authDispath] = useReducer(authReducer, initialState);\r\n  return (\r\n    // @ts-ignore\r\n    <AuthContext.Provider value={[store, authDispath]}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  z-index: 1;\r\n  cursor: pointer;\r\n`;\r\n\r\ninterface IProfileImageProps {\r\n  size: 'big' | 'middle' | 'small';\r\n  color: string;\r\n  user_id?: string;\r\n}\r\n\r\nconst Profile = styled.div<IProfileImageProps>`\r\n  ${(props) =>\r\n    props.size === 'big'\r\n      ? css`\r\n          width: 135px;\r\n          height: 135px;\r\n        `\r\n      : props.size === 'middle'\r\n      ? css`\r\n          width: 64px;\r\n          height: 64px;\r\n        `\r\n      : css`\r\n          width: 48px;\r\n          height: 48px;\r\n        `}\r\n  border-radius: 50%;\r\n  border: 1px solid #dfdfdf;\r\n  background-color: ${(props) => props.color};\r\n`;\r\n\r\n// @ts-ignore\r\nexport default function ProfileImage({\r\n  size,\r\n  color,\r\n  user_id,\r\n}: IProfileImageProps) {\r\n  const history = useHistory();\r\n  const moveToUserTimeLine = useCallback(\r\n    (e: React.MouseEvent<HTMLElement>) => {\r\n      // AddTweet, AddComment 에서는 이동하지 않도록 막기 위해서 조건문을 추가했습니다.\r\n      if (user_id) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        history.push(`/${user_id}`);\r\n        return;\r\n      } else return;\r\n    },\r\n    [history, user_id]\r\n  );\r\n  return (\r\n    <Container onClick={moveToUserTimeLine}>\r\n      <Profile size={size} color={color} />\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faComment } from '@fortawesome/free-regular-svg-icons';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  z-index: 1;\r\n  text-align: center;\r\n`;\r\n\r\nconst Icon = styled(FontAwesomeIcon)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst CountWrapper = styled.div`\r\n  display: inline-block;\r\n  margin-left: 5px;\r\n  span {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\ninterface IComment {\r\n  comments: string[];\r\n  showCount: boolean;\r\n}\r\n\r\nexport default function Comment({ comments, showCount }: IComment) {\r\n  const comments_count = useMemo(() => {\r\n    if (comments) return comments.length;\r\n    else return 0;\r\n  }, [comments]);\r\n\r\n  return (\r\n    <Container>\r\n      <Icon icon={faComment} />\r\n      {showCount && (\r\n        <CountWrapper>\r\n          {comments_count > 0 ? <span>{comments_count}</span> : <></>}\r\n        </CountWrapper>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRetweet } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  z-index: 1;\r\n  text-align: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Icon = styled(FontAwesomeIcon)<{ isactive: boolean }>`\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  ${(props) =>\r\n    props.isactive &&\r\n    css`\r\n      color: green;\r\n    `}\r\n`;\r\n\r\nconst CountWrapper = styled.div`\r\n  display: inline-block;\r\n  margin-left: 5px;\r\n  span {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\ninterface IRetweet {\r\n  user_id: string;\r\n  retweet: string[];\r\n  isLogin: boolean;\r\n  showCount: boolean;\r\n  tweet_id?: number;\r\n  onChangeTimeLine?: any;\r\n}\r\n\r\nexport default function Retweet({\r\n  user_id,\r\n  retweet,\r\n  isLogin,\r\n  showCount,\r\n  tweet_id,\r\n  onChangeTimeLine,\r\n}: IRetweet) {\r\n  const isActive = useMemo(() => {\r\n    if (retweet) {\r\n      if (retweet.includes(user_id)) {\r\n        return true;\r\n      } else return false;\r\n    } else return false;\r\n  }, [user_id, retweet]);\r\n  const retweet_count = useMemo(() => {\r\n    if (retweet) return retweet.length;\r\n    else return 0;\r\n  }, [retweet]);\r\n\r\n  const onChangeRetweet = useCallback(\r\n    async (e: React.MouseEvent<SVGSVGElement>) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (!isLogin) {\r\n        alert('로그인 후 이용할 수 있습니다.');\r\n        return;\r\n      }\r\n      try {\r\n        const apiUrl = isActive ? '/tweet/undo-retweet' : '/tweet/do-retweet';\r\n        await axios.patch(apiUrl, { tweet_id });\r\n\r\n        onChangeTimeLine();\r\n        return;\r\n      } catch (error: any) {\r\n        console.log(error);\r\n        console.log(error?.response?.data);\r\n        console.log(error?.response?.status);\r\n        console.log(error?.response?.headers);\r\n        alert(error?.response?.data);\r\n        return;\r\n      }\r\n    },\r\n    [isActive, isLogin, onChangeTimeLine, tweet_id]\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Icon isactive={isActive} icon={faRetweet} onClick={onChangeRetweet} />\r\n      {showCount && (\r\n        <CountWrapper>\r\n          {retweet_count > 0 ? <span>{retweet_count}</span> : <></>}\r\n        </CountWrapper>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart as activeHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { faHeart as nonActiveHeart } from '@fortawesome/free-regular-svg-icons';\r\nimport axios from 'axios';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  z-index: 1;\r\n  text-align: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Icon = styled(FontAwesomeIcon)<{ isactive: boolean }>`\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  ${(props) =>\r\n    props.isactive &&\r\n    css`\r\n      color: #f91880;\r\n    `}\r\n`;\r\n\r\nconst CountWrapper = styled.div`\r\n  display: inline-block;\r\n  margin-left: 5px;\r\n  span {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\ninterface IHeartProps {\r\n  user_id: string;\r\n  like: string[];\r\n  isLogin: boolean;\r\n  showCount: boolean;\r\n  tweet_id?: number;\r\n  onChangeTimeLine?: any;\r\n}\r\n\r\nexport default function Heart({\r\n  user_id,\r\n  like,\r\n  isLogin,\r\n  tweet_id,\r\n  showCount,\r\n  onChangeTimeLine,\r\n}: IHeartProps) {\r\n  const isActive = useMemo(() => {\r\n    if (like) {\r\n      if (like.includes(user_id)) {\r\n        return true;\r\n      } else return false;\r\n    } else return false;\r\n  }, [user_id, like]);\r\n  const like_count = useMemo(() => {\r\n    if (like) return like.length;\r\n    else return 0;\r\n  }, [like]);\r\n\r\n  const onChangeLike = useCallback(\r\n    async (e: React.MouseEvent<SVGSVGElement>) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (!isLogin) {\r\n        alert('로그인 후 이용할 수 있습니다.');\r\n        return;\r\n      }\r\n      try {\r\n        const apiUrl = isActive ? '/tweet/undo-like' : '/tweet/do-like';\r\n        await axios.patch(apiUrl, { tweet_id });\r\n\r\n        onChangeTimeLine();\r\n        return;\r\n      } catch (error: any) {\r\n        console.log(error);\r\n        console.log(error?.response?.data);\r\n        console.log(error?.response?.status);\r\n        console.log(error?.response?.headers);\r\n        alert(error?.response?.data);\r\n        return;\r\n      }\r\n    },\r\n    [isActive, isLogin, onChangeTimeLine, tweet_id]\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Icon\r\n        isactive={isActive}\r\n        icon={isActive ? activeHeart : nonActiveHeart}\r\n        onClick={onChangeLike}\r\n      />\r\n      {showCount && (\r\n        <CountWrapper>\r\n          {like_count > 0 ? <span>{like_count}</span> : <></>}\r\n        </CountWrapper>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  z-index: 1;\r\n  text-align: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Icon = styled(FontAwesomeIcon)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport default function Share() {\r\n  return (\r\n    <Container>\r\n      <Icon icon={faExternalLinkAlt} />\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { ITweet } from '../../types';\r\nimport ProfileImage from '../ProfileImage';\r\nimport Comment from '../Buttons/Comment';\r\nimport Retweet from '../Buttons/Retweet';\r\nimport Heart from '../Buttons/Heart';\r\nimport Share from '../Buttons/Share';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 100px;\r\n  z-index: 0;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 12px 16px;\r\n  border-top: 1px solid rgb(239, 243, 244);\r\n  border-bottom: 1px solid rgb(239, 243, 244);\r\n`;\r\n\r\nconst ContentsArea = styled.div`\r\n  position: relative;\r\n  margin-left: 10px;\r\n`;\r\nconst UserName = styled.span`\r\n  color: black;\r\n  font-weight: bold;\r\n`;\r\nconst UserId = styled.span`\r\n  color: rgb(83, 100, 113);\r\n`;\r\nconst ButtonWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 48px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 0px 70px;\r\n  border-bottom: 1px solid rgb(239, 243, 244);\r\n`;\r\n\r\ninterface ISmallTweetProps {\r\n  value: ITweet;\r\n  user_id: string;\r\n  isLogin: boolean;\r\n  onChangeTimeLine?: any;\r\n}\r\n\r\n//@ts-ignore\r\nexport default function SmallTweet({\r\n  value,\r\n  user_id,\r\n  isLogin,\r\n  onChangeTimeLine,\r\n}: ISmallTweetProps) {\r\n  const history = useHistory();\r\n  const moveToDetailPage = useCallback(() => {\r\n    history.push(`/${value.user_id}/status/${value.tweet_id}`);\r\n    return;\r\n  }, [history, value]);\r\n  return (\r\n    <Container onClick={moveToDetailPage}>\r\n      <Wrapper>\r\n        {/* // @ts-ignore */}\r\n        <ProfileImage\r\n          size=\"small\"\r\n          color={value.user.profile_color}\r\n          user_id={value.user.user_id}\r\n        />\r\n        <ContentsArea>\r\n          <div\r\n            className=\"user_name\"\r\n            style={{ display: 'inline-block', marginRight: 3 }}\r\n          >\r\n            <UserName>{value.user.name}</UserName>\r\n          </div>\r\n          <div className=\"user_id\" style={{ display: 'inline-block' }}>\r\n            <UserId>{`@${value.user.user_id}`}</UserId>\r\n          </div>\r\n          <div className=\"contents\" style={{ marginTop: 5 }}>\r\n            <span>{value.contents}</span>\r\n          </div>\r\n        </ContentsArea>\r\n      </Wrapper>\r\n      <ButtonWrapper>\r\n        <Comment comments={value.comments} showCount={true} />\r\n        <Retweet\r\n          retweet={value.retweet}\r\n          user_id={user_id}\r\n          isLogin={isLogin}\r\n          showCount={true}\r\n          tweet_id={value.tweet_id}\r\n          onChangeTimeLine={onChangeTimeLine}\r\n        />\r\n        <Heart\r\n          like={value.like}\r\n          user_id={user_id}\r\n          isLogin={isLogin}\r\n          showCount={true}\r\n          tweet_id={value.tweet_id}\r\n          onChangeTimeLine={onChangeTimeLine}\r\n        />\r\n        <Share />\r\n      </ButtonWrapper>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ITweet } from '../../types';\r\nimport SmallTweet from './SmallTweet';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  border-left: 1px solid rgb(239, 243, 244);\r\n  border-right: 1px solid rgb(239, 243, 244);\r\n`;\r\n\r\ninterface ITweetList {\r\n  data: ITweet[];\r\n  user_id: string;\r\n  isLogin: boolean;\r\n  onChangeTimeLine?: any;\r\n}\r\n//@ts-ignore {/* @ts-ignore */}\r\nexport default function TweetList({\r\n  data,\r\n  user_id,\r\n  isLogin,\r\n  onChangeTimeLine,\r\n}: ITweetList) {\r\n  if (!data) return <Container></Container>;\r\n  return (\r\n    <Container>\r\n      {data.map((value, idx) => (\r\n        <div key={idx}>\r\n          <SmallTweet\r\n            value={value}\r\n            user_id={user_id}\r\n            isLogin={isLogin}\r\n            onChangeTimeLine={onChangeTimeLine}\r\n          />\r\n        </div>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n","// 트윗 아이디 만들기. getTime 하고 유저아이디 결합하기?\r\n// 트윗 아이디 만들기. getTime 하고 유저아이디 결합하기?\r\nconst createRandomTweetId = () => {\r\n  const time: number = new Date().getTime();\r\n  // 출처: https://stackoverflow.com/a/21816629\r\n  const randomNumber: number = Math.floor(Math.random() * 899999 + 100000);\r\n  return parseInt(`${time}${randomNumber}`);\r\n};\r\n\r\nexport default createRandomTweetId;\r\n","import axios from 'axios';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport styled from 'styled-components';\r\nimport ProfileImage from '../../components/ProfileImage';\r\nimport createRandomTweetId from '../../util/createRandomTweetId';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 12px 16px;\r\n  border-top: 1px solid rgb(239, 243, 244);\r\n  border-bottom: 1px solid rgb(239, 243, 244);\r\n`;\r\nconst ContentsArea = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: end;\r\n  width: 100%;\r\n  margin-left: 10px;\r\n`;\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  max-width: 510px;\r\n  height: 52px;\r\n  border: 0;\r\n  min-height: 28px;\r\n  box-sizing: border-box;\r\n  padding-left: 16px;\r\n  font-size: 18px;\r\n  &&:focus {\r\n    outline: none;\r\n  }\r\n`;\r\nconst SubmitButton = styled(Button)`\r\n  width: 94px;\r\n  height: 36px;\r\n  background-color: rgb(29, 155, 240);\r\n  border-radius: 20px;\r\n  border: 0;\r\n\r\n  p {\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport default function AddTweet({\r\n  profile_color,\r\n  onChangeTimeLine,\r\n}: {\r\n  profile_color: string;\r\n  onChangeTimeLine: any;\r\n}) {\r\n  const [contents, setContents] = useState('');\r\n\r\n  const inputContents = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setContents(e.target.value);\r\n    },\r\n    []\r\n  );\r\n  const onSubmit = useCallback(async () => {\r\n    try {\r\n      const tweet_id = createRandomTweetId();\r\n      await axios.post('/tweet/create', { tweet_id, contents });\r\n      onChangeTimeLine();\r\n      setContents('');\r\n      return;\r\n    } catch (error: any) {\r\n      console.log(error.response.data);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n      alert(error.response.data);\r\n      return;\r\n    }\r\n  }, [contents, onChangeTimeLine]);\r\n\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <ProfileImage size=\"small\" color={profile_color} />\r\n        <ContentsArea>\r\n          <Input\r\n            value={contents}\r\n            placeholder=\"무슨 일이 일어나고 있나요?\"\r\n            type=\"text\"\r\n            onChange={inputContents}\r\n            maxLength={140}\r\n          />\r\n          <SubmitButton onClick={onSubmit}>\r\n            <p>트윗하기</p>\r\n          </SubmitButton>\r\n        </ContentsArea>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\n\r\nconst Button = styled.button`\r\n  background-color: rgb(29, 155, 240);\r\n  align-self: center;\r\n  width: 91px;\r\n  height: 30px;\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport default function JoinButton() {\r\n  const history = useHistory();\r\n  // @ts-ignore\r\n  const [, authDispatch] = useAuthContext();\r\n\r\n  const moveToPage = useCallback(() => {\r\n    return history.push('/join');\r\n  }, [history]);\r\n\r\n  return (\r\n    <Button onClick={moveToPage}>\r\n      <span>회원가입</span>\r\n    </Button>\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\n\r\nconst Button = styled.button`\r\n  background-color: rgb(29, 155, 240);\r\n  align-self: center;\r\n  width: 91px;\r\n  height: 30px;\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport default function LoginButton() {\r\n  const history = useHistory();\r\n  // @ts-ignore\r\n  const [, authDispatch] = useAuthContext();\r\n\r\n  const moveToPage = useCallback(() => {\r\n    return history.push('/login');\r\n  }, [history]);\r\n\r\n  return (\r\n    <Button onClick={moveToPage}>\r\n      <span>로그인</span>\r\n    </Button>\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\n\r\nconst Button = styled.button`\r\n  background-color: rgb(29, 155, 240);\r\n  align-self: center;\r\n  width: 91px;\r\n  height: 30px;\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport default function LogoutButton() {\r\n  const history = useHistory();\r\n  // @ts-ignore\r\n  const [, authDispatch] = useAuthContext();\r\n\r\n  const onStartLogout = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/auth/logout');\r\n      console.log('로그아웃 결과', response.data);\r\n      authDispatch({ type: 'LOGOUT' });\r\n      history.push('/login');\r\n      return;\r\n    } catch (error) {\r\n      console.log('에러', error);\r\n      return;\r\n    }\r\n  }, [authDispatch, history]);\r\n\r\n  return (\r\n    <Button onClick={onStartLogout}>\r\n      <span>로그아웃</span>\r\n    </Button>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport JoinButton from './JoinButton';\r\nimport LoginButton from './LoginButton';\r\nimport LogoutButton from './LogoutButton';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: end;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 10px 0;\r\n`;\r\n\r\nexport default function Header({ isLogin }: { isLogin: boolean }) {\r\n  return (\r\n    <Container>\r\n      {isLogin ? (\r\n        <LogoutButton />\r\n      ) : (\r\n        <>\r\n          <>\r\n            <LoginButton />\r\n          </>\r\n          <div style={{ marginLeft: 5 }}>\r\n            <JoinButton />\r\n          </div>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport useSWR, { useSWRConfig } from 'swr';\r\nimport TweetList from '../../components/Tweet/TweetList';\r\nimport AddTweet from './AddTweet';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\nimport Header from '../../components/Header/Header';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default function Home() {\r\n  const history = useHistory();\r\n  // @ts-ignore\r\n  const [authStore, authDispatch] = useAuthContext();\r\n  const { mutate } = useSWRConfig();\r\n  const { data, error } = useSWR('/reading/home', (url) =>\r\n    axios.get(url).then((res) => res.data)\r\n  );\r\n\r\n  const onChangeTimeLine = useCallback(() => {\r\n    mutate('/reading/home');\r\n    return;\r\n  }, [mutate]);\r\n\r\n  useEffect(() => {\r\n    if (!authStore.isLogin) {\r\n      history.push('/login');\r\n    }\r\n  }, [authStore, history]);\r\n\r\n  if (!data) return <></>;\r\n  if (error)\r\n    return (\r\n      <Container>\r\n        <Header isLogin={authStore?.isLogin} />\r\n        <h5 style={{ marginTop: 30 }}>에러가 발생했습니다.</h5>\r\n      </Container>\r\n    );\r\n  return (\r\n    <Container>\r\n      <Header isLogin={authStore?.isLogin} />\r\n      {/* {authStore?.isLogin && (\r\n        )} */}\r\n      <AddTweet\r\n        profile_color={authStore?.user?.profile_color}\r\n        onChangeTimeLine={onChangeTimeLine}\r\n      />\r\n      {/* @ts-ignore */}\r\n      {data && data.length === 0 && <h5>타임라인에 트윗이 없습니다.</h5>}\r\n      <TweetList\r\n        data={data}\r\n        user_id={authStore?.user?.user_id}\r\n        isLogin={authStore?.isLogin}\r\n        onChangeTimeLine={onChangeTimeLine}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Logo blue.bf36f3f6.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background-color: rgb(29, 155, 240);\r\n  align-self: center;\r\n  width: 100%;\r\n  height: 52px;\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n`;\r\n// @ts-ignore\r\nexport default function AuthButton({ text, onClick }) {\r\n  return <Button onClick={onClick}>{text}</Button>;\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  height: 43px;\r\n  box-sizing: border-box;\r\n  margin-bottom: 12px;\r\n  border-radius: 3px;\r\n  padding-left: 16px;\r\n  font-size: 14px;\r\n`;\r\n// @ts-ignore\r\nexport default function AuthInput({ value, placeholder, type, onChange }) {\r\n  return (\r\n    <Input\r\n      value={value}\r\n      placeholder={placeholder}\r\n      type={type}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport React, { useState, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport logo from '../../assets/Logo blue.svg';\r\nimport AuthButton from '../../components/AuthButton';\r\nimport AuthInput from '../../components/AuthInput';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 5%;\r\n`;\r\nconst WrapperDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-width: 300px;\r\n  width: 30%;\r\n  box-sizing: border-box;\r\n  padding: 50px 10px;\r\n  margin: 0 auto;\r\n`;\r\nconst LogoSvg = styled.img`\r\n  width: 80px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nexport default function Join() {\r\n  const history = useHistory();\r\n  const [userId, setUserId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const inputUserId = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserId(e.target.value);\r\n  }, []);\r\n  const inputName = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(e.target.value);\r\n  }, []);\r\n  const inputEmail = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.target.value);\r\n  }, []);\r\n  const inputPassword = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setPassword(e.target.value);\r\n    },\r\n    []\r\n  );\r\n  const onSubmit = useCallback(\r\n    async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      e.preventDefault();\r\n      try {\r\n        await axios.post('/auth/join', {\r\n          email,\r\n          password,\r\n          name,\r\n          user_id: userId,\r\n        });\r\n        alert('회원 가입이 완료되었습니다. 로그인 페이지로 이동합니다.');\r\n        history.push('/login');\r\n        return;\r\n      } catch (error: any) {\r\n        console.log(error.response.data);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n        alert(error.response.data);\r\n        return;\r\n      }\r\n    },\r\n    [email, history, name, password, userId]\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <WrapperDiv>\r\n        <LogoSvg src={logo} />\r\n        <form>\r\n          <AuthInput\r\n            placeholder=\"아이디를 입력하세요\"\r\n            value={userId}\r\n            type=\"text\"\r\n            onChange={inputUserId}\r\n          />\r\n          <AuthInput\r\n            placeholder=\"이름을 입력하세요\"\r\n            value={name}\r\n            type=\"text\"\r\n            onChange={inputName}\r\n          />\r\n          <AuthInput\r\n            placeholder=\"이메일를 입력하세요\"\r\n            value={email}\r\n            type=\"text\"\r\n            onChange={inputEmail}\r\n          />\r\n          <AuthInput\r\n            placeholder=\"비밀번호를 입력하세요\"\r\n            value={password}\r\n            type=\"password\"\r\n            onChange={inputPassword}\r\n          />\r\n          <AuthButton text=\"회원가입\" onClick={onSubmit} />\r\n        </form>\r\n      </WrapperDiv>\r\n    </Container>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport React, { useState, useCallback, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport logo from '../../assets/Logo blue.svg';\r\nimport AuthButton from '../../components/AuthButton';\r\nimport AuthInput from '../../components/AuthInput';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 5%;\r\n`;\r\nconst WrapperDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-width: 300px;\r\n  width: 30%;\r\n  box-sizing: border-box;\r\n  padding: 50px 10px;\r\n  margin: 0 auto;\r\n`;\r\nconst LogoSvg = styled.img`\r\n  width: 80px;\r\n  margin-bottom: 50px;\r\n`;\r\nconst JoinWrapper = styled.div`\r\n  margin-top: 10px;\r\n  span {\r\n    cursor: pointer;\r\n    color: #1a0dab;\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const [email, seEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  // @ts-ignore\r\n  const [authStore, authDispatch] = useAuthContext();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const inputUserId = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    seEmail(e.target.value);\r\n  }, []);\r\n  const inputPassword = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setPassword(e.target.value);\r\n    },\r\n    []\r\n  );\r\n  const onSubmit = useCallback(\r\n    async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      e.preventDefault();\r\n      try {\r\n        const response = await axios.post('/auth/login', { email, password });\r\n        // console.log('response', response.data);\r\n        authDispatch({ type: 'LOGIN', payload: response.data });\r\n\r\n        return history.push('/home');\r\n      } catch (error: any) {\r\n        console.log(error.response.data);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n        alert(error.response.data);\r\n        return;\r\n      }\r\n    },\r\n    [authDispatch, email, history, password]\r\n  );\r\n\r\n  const moveToJoin = useCallback(() => {\r\n    history.push('/join');\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    if (authStore?.isLogin) {\r\n      history.push('/home');\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [authStore, history]);\r\n\r\n  if (loading) return <></>;\r\n\r\n  return (\r\n    <Container>\r\n      <WrapperDiv>\r\n        <LogoSvg src={logo} />\r\n        <form>\r\n          <AuthInput\r\n            placeholder=\"이메일를 입력하세요\"\r\n            value={email}\r\n            type=\"text\"\r\n            onChange={inputUserId}\r\n          />\r\n          <AuthInput\r\n            placeholder=\"비밀번호를 입력하세요\"\r\n            value={password}\r\n            type=\"password\"\r\n            onChange={inputPassword}\r\n          />\r\n          <AuthButton text=\"로그인\" onClick={onSubmit} />\r\n          <JoinWrapper>\r\n            <span onClick={moveToJoin}>아이디가 없으신가요? 회원가입하기</span>\r\n          </JoinWrapper>\r\n        </form>\r\n      </WrapperDiv>\r\n    </Container>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport React, { useCallback, useMemo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button<{ isFollow: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  align-self: center;\r\n  width: 94px;\r\n  height: 36px;\r\n  border-radius: 9999px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  background-color: ${(props) => (props.isFollow ? '#fff' : '#000')};\r\n  color: ${(props) => (props.isFollow ? '#000' : '#fff')};\r\n`;\r\nconst ProfileEditButton = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  align-self: center;\r\n  width: 120px;\r\n  height: 36px;\r\n  border-radius: 9999px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  background-color: #fff;\r\n  color: #000;\r\n`;\r\n\r\ninterface IFollowButtonProps {\r\n  login_user_id: string;\r\n  target_user_id: string;\r\n  follower: string[];\r\n  isLoginedUserProfile?: boolean;\r\n  onChangeStatus?: any;\r\n}\r\n\r\nexport default function FollowButton({\r\n  login_user_id,\r\n  target_user_id,\r\n  follower,\r\n  isLoginedUserProfile,\r\n  onChangeStatus,\r\n}: IFollowButtonProps) {\r\n  const history = useHistory();\r\n  const isFollow = useMemo(() => {\r\n    console.log('대상 사용자의 팔로워: ', follower);\r\n    if (follower && follower.includes(login_user_id)) {\r\n      return true;\r\n    } else return false;\r\n  }, [follower, login_user_id]);\r\n  // const onClickFollowButton = useCallback(\r\n  //   async (e: React.MouseEvent<HTMLElement>) => {\r\n  //     e.preventDefault();\r\n  //     const apiUrl = isFollow ? 'unfollow-user' : 'follow-user';\r\n  //     console.log('버튼 클릭 시작');\r\n  //     await onChangeFollow(apiUrl);\r\n  //     return;\r\n  //   },\r\n  //   [isFollow, onChangeFollow]\r\n  // );\r\n\r\n  const onChangeFollowStatus = useCallback(async () => {\r\n    try {\r\n      const apiUrl = isFollow ? 'unfollow-user' : 'follow-user';\r\n      await axios.patch(`/user/${apiUrl}`, {\r\n        target_user_id,\r\n      });\r\n      onChangeStatus();\r\n      return;\r\n    } catch (error: any) {\r\n      console.log(error.response.data);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n      alert(error.response.data);\r\n      return;\r\n    }\r\n  }, [isFollow, onChangeStatus, target_user_id]);\r\n\r\n  const moveToEditPage = useCallback(\r\n    (e: React.MouseEvent<HTMLElement>) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      history.push('/setting');\r\n    },\r\n    [history]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {isLoginedUserProfile ? (\r\n        <ProfileEditButton onClick={moveToEditPage}>\r\n          <span>프로필 수정</span>\r\n        </ProfileEditButton>\r\n      ) : (\r\n        <Button isFollow={isFollow} onClick={onChangeFollowStatus}>\r\n          {isFollow ? '팔로잉' : '팔로우'}\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport FollowButton from '../../components/Buttons/FollowButton';\r\nimport ProfileImage from '../../components/ProfileImage';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  min-height: 200px;\r\n  box-sizing: border-box;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  padding-top: 12px;\r\n  margin-bottom: 16px;\r\n`;\r\nconst ProfileWrapper = styled.div`\r\n  position: relative;\r\n  .profile-user-name {\r\n    font-weight: bold;\r\n  }\r\n  .profile-user-id {\r\n    color: rgb(83, 100, 113);\r\n  }\r\n`;\r\nconst DescriptionWrapper = styled.div`\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  span {\r\n    font-size: 1.1rem;\r\n  }\r\n`;\r\nconst FollowButtonWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: 10%;\r\n  right: 0;\r\n`;\r\n\r\nconst FollowCountWrapper = styled.div`\r\n  width: 100%;\r\n  height: 48px;\r\n`;\r\nconst CountArea = styled.div`\r\n  display: inline-block;\r\n  .count {\r\n    font-weight: bold;\r\n  }\r\n  .count-text {\r\n    margin-left: 3px;\r\n  }\r\n`;\r\n\r\ninterface IUserProfileProps {\r\n  login_user_id: string;\r\n  user_id: string;\r\n  name: string;\r\n  profile_color: string;\r\n  description: string;\r\n  following?: string[];\r\n  follower: string[];\r\n  follower_count: number;\r\n  following_count: number;\r\n  isLoginedUserProfile?: boolean;\r\n  onChangeStatus?: any;\r\n}\r\nexport default function UserProfile({\r\n  login_user_id,\r\n  user_id,\r\n  name,\r\n  profile_color,\r\n  description,\r\n  follower,\r\n  follower_count,\r\n  following_count,\r\n  isLoginedUserProfile,\r\n  onChangeStatus,\r\n}: IUserProfileProps) {\r\n  return (\r\n    <Container>\r\n      <ProfileWrapper>\r\n        <>\r\n          <ProfileImage size=\"big\" color={profile_color} />\r\n          <div style={{ marginTop: 10 }}>\r\n            <span className=\"profile-user-name\">{name}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"profile-user-id\">{`@${user_id}`}</span>\r\n          </div>\r\n        </>\r\n        <FollowButtonWrapper>\r\n          <FollowButton\r\n            target_user_id={user_id}\r\n            isLoginedUserProfile={isLoginedUserProfile}\r\n            follower={follower}\r\n            login_user_id={login_user_id}\r\n            onChangeStatus={onChangeStatus}\r\n          />\r\n        </FollowButtonWrapper>\r\n      </ProfileWrapper>\r\n      <DescriptionWrapper>\r\n        <span>{description}</span>\r\n      </DescriptionWrapper>\r\n      <FollowCountWrapper>\r\n        {following_count > 0 && (\r\n          <CountArea className=\"count-area\">\r\n            <span className=\"count\">{following_count}</span>\r\n            <span className=\"count-text\">팔로우 중</span>\r\n          </CountArea>\r\n        )}\r\n        {follower_count > 0 && (\r\n          <CountArea className=\"count-area\" style={{ marginLeft: 10 }}>\r\n            <span className=\"count\">{follower_count}</span>\r\n            <span className=\"count-text\">팔로워</span>\r\n          </CountArea>\r\n        )}\r\n      </FollowCountWrapper>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport useSWR, { useSWRConfig, SWRConfig } from 'swr';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\nimport TweetList from '../../components/Tweet/TweetList';\r\nimport Header from '../../components/Header/Header';\r\nimport UserProfile from './UserProfile';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default function User() {\r\n  const params: { userid: string } = useParams();\r\n  // @ts-ignore\r\n  const [authStore, authDispatch] = useAuthContext();\r\n  const { mutate } = useSWRConfig();\r\n  const { data, error } = useSWR(`/reading/timeline/${params.userid}`, (url) =>\r\n    axios.get(url).then((res) => res.data)\r\n  );\r\n\r\n  const onChangeTimeLine = useCallback(() => {\r\n    mutate(`/reading/timeline/${params.userid}`);\r\n    return;\r\n  }, [mutate, params.userid]);\r\n\r\n  if (!data) return <></>;\r\n  if (error)\r\n    return (\r\n      <Container>\r\n        <Header isLogin={authStore?.isLogin} />\r\n        <div style={{ marginTop: 10 }}>\r\n          <h5>에러가 발생했습니다.</h5>\r\n        </div>\r\n      </Container>\r\n    );\r\n\r\n  return (\r\n    <SWRConfig value={{ provider: () => new Map() }}>\r\n      <Container>\r\n        <Header isLogin={authStore?.isLogin} />\r\n        <UserProfile\r\n          login_user_id={authStore?.user?.user_id}\r\n          user_id={data?.user.user_id}\r\n          name={data?.user.name}\r\n          profile_color={data?.user.profile_color}\r\n          description={data?.user.description}\r\n          following={data?.user.following}\r\n          follower={data?.user.follower}\r\n          follower_count={data?.follower_count}\r\n          following_count={data?.following_count}\r\n          isLoginedUserProfile={authStore?.user?.user_id === data?.user.user_id}\r\n          onChangeStatus={onChangeTimeLine}\r\n        />\r\n        {data?.timeLine.length === 0 && <h5>타임라인에 트윗이 없습니다.</h5>}\r\n        <TweetList\r\n          data={data?.timeLine}\r\n          user_id={authStore?.user?.user_id}\r\n          isLogin={authStore?.isLogin}\r\n          onChangeTimeLine={onChangeTimeLine}\r\n        />\r\n      </Container>\r\n    </SWRConfig>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\n\r\nexport default function Main() {\r\n  const history = useHistory();\r\n  // @ts-ignore\r\n  const [authStore, authDispatch] = useAuthContext();\r\n\r\n  useEffect(() => {\r\n    if (authStore.isLogin) {\r\n      history.push('/home');\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [authStore, history]);\r\n  return <></>;\r\n}\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ITweet } from '../../types';\r\nimport ProfileImage from '../ProfileImage';\r\nimport Comment from '../Buttons/Comment';\r\nimport Retweet from '../Buttons/Retweet';\r\nimport Heart from '../Buttons/Heart';\r\nimport Share from '../Buttons/Share';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-sizing: border-box;\r\n  padding: 12px 16px;\r\n  border-top: 1px solid rgb(239, 243, 244);\r\n  border-bottom: 1px solid rgb(239, 243, 244);\r\n`;\r\nconst ProfileArea = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n`;\r\nconst UserName = styled.a`\r\n  color: black;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n`;\r\nconst UserId = styled.span`\r\n  font-size: 0.8rem;\r\n  color: rgb(83, 100, 113);\r\n`;\r\nconst ContentsArea = styled.div`\r\n  position: relative;\r\n  .contents-div {\r\n    font-size: 1.1rem;\r\n    font-weight: 500;\r\n  }\r\n  .time-div {\r\n    font-size: 0.9rem;\r\n    font-weight: 400;\r\n  }\r\n`;\r\n\r\nconst CountsWrapper = styled.div`\r\n  width: 100%;\r\n  height: 48px;\r\n  box-sizing: border-box;\r\n  padding: 12px 16px;\r\n  border-bottom: 1px solid rgb(239, 243, 244);\r\n`;\r\nconst CountArea = styled.div`\r\n  display: inline-block;\r\n  .count {\r\n    font-weight: bold;\r\n  }\r\n  .count-text {\r\n    margin-left: 3px;\r\n  }\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 48px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  border-bottom: 1px solid rgb(239, 243, 244);\r\n`;\r\n\r\ninterface ISmallTweetProps {\r\n  value: ITweet;\r\n  user_id: string;\r\n  isLogin: boolean;\r\n  onChangeTweet?: any;\r\n}\r\n\r\n//@ts-ignore\r\nexport default function DetailTweet({\r\n  value,\r\n  user_id,\r\n  isLogin,\r\n  onChangeTweet,\r\n}: ISmallTweetProps) {\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <ProfileArea>\r\n          <ProfileImage\r\n            size=\"small\"\r\n            color={value?.user?.profile_color}\r\n            user_id={value?.user?.user_id}\r\n          />\r\n          <div className=\"name-id-field\" style={{ marginLeft: 10 }}>\r\n            <div className=\"user_name\">\r\n              <UserName>{value?.user?.name}</UserName>\r\n            </div>\r\n            <div className=\"user_id\">\r\n              <UserId>{`@${value?.user?.user_id}`}</UserId>\r\n            </div>\r\n          </div>\r\n        </ProfileArea>\r\n\r\n        <ContentsArea>\r\n          <div className=\"contents-div\" style={{ marginTop: 5 }}>\r\n            <span>{value?.contents}</span>\r\n          </div>\r\n          <div className=\"time-div\" style={{ marginTop: 5 }}>\r\n            <span>{value?.create_date}</span>\r\n          </div>\r\n        </ContentsArea>\r\n      </Wrapper>\r\n\r\n      <CountsWrapper>\r\n        {value?.retweet_count === 0 && value?.like_count === 0 && (\r\n          <p>트윗 활동이 없습니다.</p>\r\n        )}\r\n        {value?.retweet_count > 0 && (\r\n          <CountArea className=\"count-area\">\r\n            <span className=\"count\">{value?.retweet_count}</span>\r\n            <span className=\"count-text\">리트윗</span>\r\n          </CountArea>\r\n        )}\r\n        {value?.like_count > 0 && (\r\n          <CountArea className=\"count-area\" style={{ marginLeft: 10 }}>\r\n            <span className=\"count\">{value?.like_count}</span>\r\n            <span className=\"count-text\">마음에 들어요</span>\r\n          </CountArea>\r\n        )}\r\n      </CountsWrapper>\r\n\r\n      <ButtonWrapper>\r\n        <Comment comments={value?.comments} showCount={false} />\r\n        <Retweet\r\n          retweet={value?.retweet}\r\n          user_id={user_id}\r\n          isLogin={isLogin}\r\n          showCount={false}\r\n          tweet_id={value?.tweet_id}\r\n          onChangeTimeLine={onChangeTweet}\r\n        />\r\n        <Heart\r\n          like={value?.like}\r\n          user_id={user_id}\r\n          isLogin={isLogin}\r\n          showCount={false}\r\n          tweet_id={value?.tweet_id}\r\n          onChangeTimeLine={onChangeTweet}\r\n        />\r\n        <Share />\r\n      </ButtonWrapper>\r\n    </Container>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport styled from 'styled-components';\r\nimport ProfileImage from '../../components/ProfileImage';\r\nimport createRandomTweetId from '../../util/createRandomTweetId';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 12px 16px;\r\n  border-top: 1px solid rgb(239, 243, 244);\r\n  border-bottom: 1px solid rgb(239, 243, 244);\r\n`;\r\nconst ContentsArea = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: end;\r\n  width: 100%;\r\n  margin-left: 10px;\r\n`;\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  max-width: 510px;\r\n  height: 52px;\r\n  border: 0;\r\n  min-height: 28px;\r\n  box-sizing: border-box;\r\n  padding-left: 16px;\r\n  font-size: 18px;\r\n  &&:focus {\r\n    outline: none;\r\n  }\r\n`;\r\nconst SubmitButton = styled(Button)`\r\n  width: 94px;\r\n  height: 36px;\r\n  background-color: rgb(29, 155, 240);\r\n  border-radius: 20px;\r\n  border: 0;\r\n\r\n  p {\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n`;\r\ninterface IAddCommentProp {\r\n  profile_color: string;\r\n  target_tweet_id: number;\r\n  onChangeTweet: any;\r\n}\r\nexport default function AddComment({\r\n  profile_color,\r\n  target_tweet_id,\r\n  onChangeTweet,\r\n}: IAddCommentProp) {\r\n  const [contents, setContents] = useState('');\r\n\r\n  const inputContents = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setContents(e.target.value);\r\n    },\r\n    []\r\n  );\r\n\r\n  const onSubmit = useCallback(async () => {\r\n    try {\r\n      const tweet_id = createRandomTweetId();\r\n      await axios.post('/tweet/add-comment', {\r\n        tweet_id,\r\n        contents,\r\n        target_tweet_id,\r\n      });\r\n      onChangeTweet();\r\n      setContents('');\r\n      return;\r\n    } catch (error: any) {\r\n      console.log(error.response.data);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n      alert(error.response.data);\r\n      return;\r\n    }\r\n  }, [contents, onChangeTweet]);\r\n\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <ProfileImage size=\"small\" color={profile_color} />\r\n        <ContentsArea>\r\n          <Input\r\n            value={contents}\r\n            placeholder=\"내 답글을 트윗합니다.\"\r\n            type=\"text\"\r\n            onChange={inputContents}\r\n            maxLength={140}\r\n          />\r\n          <SubmitButton onClick={onSubmit}>\r\n            <p>답글</p>\r\n          </SubmitButton>\r\n        </ContentsArea>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport useSWR, { useSWRConfig } from 'swr';\r\nimport Header from '../../components/Header/Header';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\nimport DetailTweet from '../../components/Tweet/DetailTweet';\r\nimport AddComment from './AddComment';\r\nimport TweetList from '../../components/Tweet/TweetList';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n`;\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  border-left: 1px solid rgb(239, 243, 244);\r\n  border-right: 1px solid rgb(239, 243, 244);\r\n`;\r\n\r\nexport default function Tweet() {\r\n  // @ts-ignore\r\n  const [authStore, authDispatch] = useAuthContext();\r\n  const params: { user: string; tweetid: string } = useParams();\r\n  const { mutate } = useSWRConfig();\r\n  const { data, error } = useSWR(`/reading/${params.tweetid}`, (url) =>\r\n    axios.get(url).then((res) => res.data)\r\n  );\r\n\r\n  const onChangeTweet = useCallback(() => {\r\n    // 답글을 작성한 후 트윗을 갱신합니다.\r\n    mutate(`/reading/${params.tweetid}`);\r\n    return;\r\n  }, [mutate, params.tweetid]);\r\n\r\n  if (!data) return <></>;\r\n  if (error)\r\n    return (\r\n      <Container>\r\n        <Header isLogin={authStore?.isLogin} />\r\n        <Wrapper>\r\n          <h5 style={{ marginTop: 30 }}>에러가 발생했습니다.</h5>\r\n        </Wrapper>\r\n      </Container>\r\n    );\r\n\r\n  return (\r\n    <Container>\r\n      <Header isLogin={authStore?.isLogin} />\r\n      <Wrapper>\r\n        <DetailTweet\r\n          value={data?.origin}\r\n          user_id={authStore?.user?.user_id}\r\n          isLogin={authStore?.isLogin}\r\n          onChangeTweet={onChangeTweet}\r\n        />\r\n        {authStore?.isLogin && (\r\n          <AddComment\r\n            profile_color={authStore?.user?.profile_color}\r\n            target_tweet_id={data?.origin?.tweet_id}\r\n            onChangeTweet={onChangeTweet}\r\n          />\r\n        )}\r\n        {/* comments 에다 각각 작은트윗 불러오기 */}\r\n        <TweetList\r\n          data={data?.comments}\r\n          user_id={authStore?.user?.user_id}\r\n          isLogin={authStore?.isLogin}\r\n          onChangeTimeLine={onChangeTweet}\r\n        />\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Route, Switch } from 'react-router-dom';\nimport { useAuthContext } from './context/AuthContext';\nimport Home from './pages/Home';\nimport Join from './pages/Join';\nimport Login from './pages/Login';\nimport User from './pages/User';\nimport Main from './pages/Main';\nimport Tweet from './pages/Tweet';\n\nfunction App() {\n  // @ts-ignore\n  const [, authDispatch] = useAuthContext();\n  const [loading, setLoading] = useState(true);\n\n  const sessionLogin = useCallback(async () => {\n    try {\n      const response = await axios.post('/auth/token-refresh');\n      console.log('토큰 로그인 결과', response.data);\n      authDispatch({ type: 'LOGIN', payload: response.data });\n      setTimeout(() => {\n        setLoading(false);\n      }, 100);\n      return;\n    } catch (error) {\n      setLoading(false);\n      return;\n    }\n  }, [authDispatch]);\n\n  useEffect(() => {\n    sessionLogin();\n  }, [sessionLogin]);\n\n  if (loading) return <></>;\n\n  return (\n    <Switch>\n      <Route path=\"/\" component={Main} exact />\n      <Route path=\"/home\" component={Home} exact />\n      <Route path=\"/login\" component={Login} exact />\n      <Route path=\"/join\" component={Join} exact />\n      <Route path=\"/:userid\" component={User} exact />\n      <Route path=\"/:user/status/:tweetid\" component={Tweet} exact />\n    </Switch>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './context/AuthContext';\n\naxios.defaults.withCredentials = true;\naxios.defaults.baseURL = 'http://localhost:80/api';\n// axios.defaults.baseURL = 'http://localhost:5000/api';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}