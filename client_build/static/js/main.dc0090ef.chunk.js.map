{"version":3,"sources":["context/AuthContext.tsx","components/ProfileImage.tsx","components/Buttons/Comment.tsx","components/Buttons/Retweet.tsx","components/Buttons/Heart.tsx","components/Buttons/Share.tsx","components/Tweet/SmallTweet.tsx","components/Tweet/TweetList.tsx","util/createRandomTweetId.ts","pages/Home/AddTweet.tsx","components/Header/JoinButton.tsx","components/Header/LoginButton.tsx","components/Header/LogoutButton.tsx","components/Header/Header.tsx","pages/Home/index.tsx","assets/Logo blue.svg","components/AuthButton.tsx","components/AuthInput.tsx","pages/Join/index.tsx","pages/Login/index.tsx","components/Buttons/FollowButton.tsx","pages/User/UserProfile.tsx","pages/User/index.tsx","pages/Main/index.tsx","components/Tweet/DetailTweet.tsx","pages/Tweet/AddComment.tsx","pages/Tweet/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialState","isLogin","user","user_id","name","follower","following","profile_color","description","AuthContext","createContext","useAuthContext","context","useContext","Error","authReducer","prevState","action","type","payload","console","log","AuthProvider","children","useReducer","store","authDispath","Provider","value","Container","styled","div","Profile","props","size","css","color","ProfileImage","history","useHistory","moveToUserTimeLine","useCallback","e","preventDefault","stopPropagation","push","onClick","Icon","FontAwesomeIcon","CountWrapper","Comment","comments","showCount","comments_count","useMemo","length","icon","faComment","IconButton","button","Retweet","retweet","tweet_id","onChangeTimeLine","isActive","includes","retweet_count","onChangeRetweet","a","alert","axios","delete","post","response","data","status","headers","faRetweet","Heart","like","like_count","onChangeLike","activeHeart","nonActiveHeart","Share","onCopyUrl","navigator","clipboard","writeText","window","location","href","toast","position","POSITION","BOTTOM_CENTER","faExternalLinkAlt","Wrapper","ContentsArea","UserName","span","UserId","ButtonWrapper","SmallTweet","moveToDetailPage","className","style","display","marginRight","marginTop","contents","TweetList","map","idx","createRandomTweetId","time","Date","getTime","randomNumber","Math","floor","random","parseInt","Input","input","SubmitButton","Button","AddTweet","useState","setContents","inputContents","target","onSubmit","placeholder","onChange","maxLength","JoinButton","moveToPage","LoginButton","LogoutButton","authDispatch","onStartLogout","Header","marginLeft","Home","authStore","mutate","useSWRConfig","useSWR","url","get","then","res","error","useEffect","AuthButton","text","AuthInput","WrapperDiv","LogoSvg","img","Join","profileColor","userId","setUserId","setName","email","setEmail","password","setPassword","onChangeUserId","onChangeName","onChangeEmail","onChangePassword","src","logo","JoinWrapper","Login","seEmail","loading","setLoading","moveToJoin","isFollow","ProfileEditButton","FollowButton","login_user_id","target_user_id","isLoginedUserProfile","onChangeStatus","onChangeFollowStatus","patch","moveToEditPage","ProfileWrapper","DescriptionWrapper","FollowButtonWrapper","FollowCountWrapper","CountArea","UserProfile","follower_count","following_count","User","params","useParams","userid","provider","Map","timeLine","Main","ProfileArea","CountsWrapper","DetailTweet","onChangeTweet","create_date","AddComment","target_tweet_id","Tweet","tweetid","origin","App","sessionLogin","setTimeout","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","withCredentials","baseURL","ReactDOM","render","StrictMode","hideProgressBar","document","getElementById"],"mappings":"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","file":"static/js/main.dc0090ef.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from 'react';\r\nimport { IMedia } from '../types';\r\n\r\ninterface IUserProps {\r\n  isLogin: boolean;\r\n  user: {\r\n    user_id: string;\r\n    name: string;\r\n    // join_date: string;\r\n    follower: string[];\r\n    following: string[];\r\n    profile_color: string;\r\n    description: string;\r\n  };\r\n}\r\nconst initialState: IUserProps = {\r\n  isLogin: false,\r\n  user: {\r\n    user_id: '',\r\n    name: '',\r\n    follower: [],\r\n    following: [],\r\n    profile_color: '#17517e',\r\n    description: '',\r\n  },\r\n};\r\n\r\nexport const AuthContext = createContext(initialState);\r\n\r\nexport function useAuthContext() {\r\n  const context = useContext(AuthContext);\r\n  if (!context) throw new Error('AuthContext 없음.');\r\n  return context;\r\n}\r\n\r\n// @ts-ignore\r\nconst authReducer = (prevState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN': {\r\n      return {\r\n        isLogin: true,\r\n        user: action.payload,\r\n      };\r\n    }\r\n    case 'LOGOUT': {\r\n      return {\r\n        isLogin: false,\r\n        user: {\r\n          user_id: '',\r\n          name: '',\r\n          follower: [],\r\n          following: [],\r\n          profile_color: '#17517e',\r\n          description: '',\r\n        },\r\n      };\r\n    }\r\n    default: {\r\n      console.log('context 에러');\r\n      return prevState;\r\n    }\r\n  }\r\n};\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactChild[] }) {\r\n  const [store, authDispath] = useReducer(authReducer, initialState);\r\n  return (\r\n    // @ts-ignore\r\n    <AuthContext.Provider value={[store, authDispath]}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  z-index: 1;\r\n  cursor: pointer;\r\n`;\r\n\r\ninterface IProfileImageProps {\r\n  size: 'big' | 'middle' | 'small';\r\n  color: string;\r\n  user_id?: string;\r\n}\r\n\r\nconst Profile = styled.div<IProfileImageProps>`\r\n  ${(props) =>\r\n    props.size === 'big'\r\n      ? css`\r\n          width: 135px;\r\n          height: 135px;\r\n        `\r\n      : props.size === 'middle'\r\n      ? css`\r\n          width: 64px;\r\n          height: 64px;\r\n        `\r\n      : css`\r\n          width: 48px;\r\n          height: 48px;\r\n        `}\r\n  border-radius: 50%;\r\n  border: 1px solid #dfdfdf;\r\n  background-color: ${(props) => props.color};\r\n`;\r\n\r\n// @ts-ignore\r\nexport default function ProfileImage({\r\n  size,\r\n  color,\r\n  user_id,\r\n}: IProfileImageProps) {\r\n  const history = useHistory();\r\n  const moveToUserTimeLine = useCallback(\r\n    (e: React.MouseEvent<HTMLElement>) => {\r\n      // AddTweet, AddComment 에서는 이동하지 않도록 막기 위해서 조건문을 추가했습니다.\r\n      if (user_id) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        history.push(`/${user_id}`);\r\n        return;\r\n      } else return;\r\n    },\r\n    [history, user_id]\r\n  );\r\n  return (\r\n    <Container onClick={moveToUserTimeLine}>\r\n      <Profile size={size} color={color} />\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faComment } from '@fortawesome/free-regular-svg-icons';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  z-index: 1;\r\n  text-align: center;\r\n`;\r\n\r\nconst Icon = styled(FontAwesomeIcon)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst CountWrapper = styled.div`\r\n  display: inline-block;\r\n  margin-left: 5px;\r\n  span {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\ninterface IComment {\r\n  comments: string[];\r\n  showCount: boolean;\r\n}\r\n\r\nexport default function Comment({ comments, showCount }: IComment) {\r\n  const comments_count = useMemo(() => {\r\n    if (comments) return comments.length;\r\n    else return 0;\r\n  }, [comments]);\r\n\r\n  return (\r\n    <Container>\r\n      <Icon icon={faComment} />\r\n      {showCount && (\r\n        <CountWrapper>\r\n          {comments_count > 0 ? <span>{comments_count}</span> : <></>}\r\n        </CountWrapper>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRetweet } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  z-index: 1;\r\n  text-align: center;\r\n  cursor: pointer;\r\n`;\r\nconst IconButton = styled.button`\r\n  width: 30%;\r\n  margin: 0 auto;\r\n  border: none;\r\n  border-radius: 9999px;\r\n  background-color: transparent;\r\n  &:hover {\r\n    background-color: rgba(0, 186, 124, 0.1);\r\n  }\r\n`;\r\nconst Icon = styled(FontAwesomeIcon)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst CountWrapper = styled.div`\r\n  display: inline-block;\r\n  margin-left: 5px;\r\n  span {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\ninterface IRetweet {\r\n  user_id: string;\r\n  retweet: string[];\r\n  isLogin: boolean;\r\n  showCount: boolean;\r\n  tweet_id?: number;\r\n  onChangeTimeLine?: any;\r\n}\r\n\r\nexport default function Retweet({\r\n  user_id,\r\n  retweet,\r\n  isLogin,\r\n  showCount,\r\n  tweet_id,\r\n  onChangeTimeLine,\r\n}: IRetweet) {\r\n  const isActive = useMemo(() => {\r\n    if (retweet) {\r\n      if (retweet.includes(user_id)) {\r\n        return true;\r\n      } else return false;\r\n    } else return false;\r\n  }, [user_id, retweet]);\r\n  const retweet_count = useMemo(() => {\r\n    if (retweet) return retweet.length;\r\n    else return 0;\r\n  }, [retweet]);\r\n\r\n  const onChangeRetweet = useCallback(\r\n    async (e: React.MouseEvent<HTMLElement>) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (!isLogin) {\r\n        alert('로그인 후 이용할 수 있습니다.');\r\n        return;\r\n      }\r\n      try {\r\n        if (isActive) await axios.delete(`/tweets/retweet/${tweet_id}`);\r\n        else await axios.post('/tweets/retweet', { tweet_id });\r\n\r\n        onChangeTimeLine();\r\n        return;\r\n      } catch (error: any) {\r\n        console.log(error);\r\n        console.log(error?.response?.data);\r\n        console.log(error?.response?.status);\r\n        console.log(error?.response?.headers);\r\n        alert(error?.response?.data);\r\n        return;\r\n      }\r\n    },\r\n    [isActive, isLogin, onChangeTimeLine, tweet_id]\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton onClick={onChangeRetweet}>\r\n        <Icon color={isActive ? 'green' : 'black'} icon={faRetweet} />\r\n      </IconButton>\r\n\r\n      {showCount && (\r\n        <CountWrapper>\r\n          {retweet_count > 0 ? <span>{retweet_count}</span> : <></>}\r\n        </CountWrapper>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart as activeHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { faHeart as nonActiveHeart } from '@fortawesome/free-regular-svg-icons';\r\nimport axios from 'axios';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  z-index: 1;\r\n  text-align: center;\r\n  cursor: pointer;\r\n`;\r\nconst IconButton = styled.button`\r\n  width: 30%;\r\n  margin: 0 auto;\r\n  border: none;\r\n  border-radius: 9999px;\r\n  background-color: transparent;\r\n  &:hover {\r\n    background-color: rgba(249, 24, 128, 0.1);\r\n  }\r\n`;\r\nconst Icon = styled(FontAwesomeIcon)`\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst CountWrapper = styled.div`\r\n  display: inline-block;\r\n  margin-left: 5px;\r\n  span {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\ninterface IHeartProps {\r\n  user_id: string;\r\n  like: string[];\r\n  isLogin: boolean;\r\n  showCount: boolean;\r\n  tweet_id?: number;\r\n  onChangeTimeLine?: any;\r\n}\r\n\r\nexport default function Heart({\r\n  user_id,\r\n  like,\r\n  isLogin,\r\n  tweet_id,\r\n  showCount,\r\n  onChangeTimeLine,\r\n}: IHeartProps) {\r\n  const isActive = useMemo(() => {\r\n    if (like) {\r\n      if (like.includes(user_id)) {\r\n        return true;\r\n      } else return false;\r\n    } else return false;\r\n  }, [user_id, like]);\r\n  const like_count = useMemo(() => {\r\n    if (like) return like.length;\r\n    else return 0;\r\n  }, [like]);\r\n\r\n  const onChangeLike = useCallback(\r\n    async (e: React.MouseEvent<HTMLElement>) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (!isLogin) {\r\n        alert('로그인 후 이용할 수 있습니다.');\r\n        return;\r\n      }\r\n      try {\r\n        if (isActive) await axios.delete(`/tweets/like/${tweet_id}`);\r\n        else await axios.post('/tweets/like', { tweet_id });\r\n\r\n        onChangeTimeLine();\r\n        return;\r\n      } catch (error: any) {\r\n        console.log(error);\r\n        console.log(error?.response?.data);\r\n        console.log(error?.response?.status);\r\n        console.log(error?.response?.headers);\r\n        alert(error?.response?.data);\r\n        return;\r\n      }\r\n    },\r\n    [isActive, isLogin, onChangeTimeLine, tweet_id]\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton onClick={onChangeLike}>\r\n        <Icon\r\n          color={isActive ? '#f91880' : 'black'}\r\n          icon={isActive ? activeHeart : nonActiveHeart}\r\n        />\r\n      </IconButton>\r\n\r\n      {showCount && (\r\n        <CountWrapper>\r\n          {like_count > 0 ? <span>{like_count}</span> : <></>}\r\n        </CountWrapper>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  z-index: 1;\r\n  text-align: center;\r\n  cursor: pointer;\r\n`;\r\nconst IconButton = styled.button`\r\n  width: 30%;\r\n  margin: 0 auto;\r\n  border: none;\r\n  border-radius: 9999px;\r\n  background-color: transparent;\r\n  &:hover {\r\n    background-color: rgba(29, 155, 240, 0.1);\r\n  }\r\n`;\r\n\r\nconst Icon = styled(FontAwesomeIcon)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport default function Share() {\r\n  const onCopyUrl = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n    // 출처: https://stackoverflow.com/a/52033479\r\n    navigator.clipboard.writeText(window.location.href);\r\n    toast('링크를 클립보드에 복사했습니다.', {\r\n      position: toast.POSITION.BOTTOM_CENTER,\r\n    });\r\n    return;\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <IconButton onClick={onCopyUrl}>\r\n        <Icon icon={faExternalLinkAlt} />\r\n      </IconButton>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { ITweet } from '../../types';\r\nimport ProfileImage from '../ProfileImage';\r\nimport Comment from '../Buttons/Comment';\r\nimport Retweet from '../Buttons/Retweet';\r\nimport Heart from '../Buttons/Heart';\r\nimport Share from '../Buttons/Share';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 100px;\r\n  z-index: 0;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 12px 16px;\r\n  border-top: 1px solid rgb(239, 243, 244);\r\n  border-bottom: 1px solid rgb(239, 243, 244);\r\n`;\r\n\r\nconst ContentsArea = styled.div`\r\n  position: relative;\r\n  margin-left: 10px;\r\n`;\r\nconst UserName = styled.span`\r\n  color: black;\r\n  font-weight: bold;\r\n`;\r\nconst UserId = styled.span`\r\n  color: rgb(83, 100, 113);\r\n`;\r\nconst ButtonWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 48px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 0px 70px;\r\n  border-bottom: 1px solid rgb(239, 243, 244);\r\n`;\r\n\r\ninterface ISmallTweetProps {\r\n  value: ITweet;\r\n  user_id: string;\r\n  isLogin: boolean;\r\n  onChangeTimeLine?: any;\r\n}\r\n\r\n//@ts-ignore\r\nexport default function SmallTweet({\r\n  value,\r\n  user_id,\r\n  isLogin,\r\n  onChangeTimeLine,\r\n}: ISmallTweetProps) {\r\n  const history = useHistory();\r\n  const moveToDetailPage = useCallback(() => {\r\n    history.push(`/${value.user_id}/status/${value.tweet_id}`);\r\n    return;\r\n  }, [history, value]);\r\n  return (\r\n    <Container onClick={moveToDetailPage}>\r\n      <Wrapper>\r\n        {/* // @ts-ignore */}\r\n        <ProfileImage\r\n          size=\"small\"\r\n          color={value.user.profile_color}\r\n          user_id={value.user.user_id}\r\n        />\r\n        <ContentsArea>\r\n          <div\r\n            className=\"user_name\"\r\n            style={{ display: 'inline-block', marginRight: 3 }}\r\n          >\r\n            <UserName>{value.user.name}</UserName>\r\n          </div>\r\n          <div className=\"user_id\" style={{ display: 'inline-block' }}>\r\n            <UserId>{`@${value.user.user_id}`}</UserId>\r\n          </div>\r\n          <div className=\"contents\" style={{ marginTop: 5 }}>\r\n            <span>{value.contents}</span>\r\n          </div>\r\n        </ContentsArea>\r\n      </Wrapper>\r\n      <ButtonWrapper>\r\n        <Comment comments={value.comments} showCount={true} />\r\n        <Retweet\r\n          retweet={value.retweet}\r\n          user_id={user_id}\r\n          isLogin={isLogin}\r\n          showCount={true}\r\n          tweet_id={value.tweet_id}\r\n          onChangeTimeLine={onChangeTimeLine}\r\n        />\r\n        <Heart\r\n          like={value.like}\r\n          user_id={user_id}\r\n          isLogin={isLogin}\r\n          showCount={true}\r\n          tweet_id={value.tweet_id}\r\n          onChangeTimeLine={onChangeTimeLine}\r\n        />\r\n        <Share />\r\n      </ButtonWrapper>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ITweet } from '../../types';\r\nimport SmallTweet from './SmallTweet';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  border-left: 1px solid rgb(239, 243, 244);\r\n  border-right: 1px solid rgb(239, 243, 244);\r\n`;\r\n\r\ninterface ITweetList {\r\n  data: ITweet[];\r\n  user_id: string;\r\n  isLogin: boolean;\r\n  onChangeTimeLine?: any;\r\n}\r\n//@ts-ignore {/* @ts-ignore */}\r\nexport default function TweetList({\r\n  data,\r\n  user_id,\r\n  isLogin,\r\n  onChangeTimeLine,\r\n}: ITweetList) {\r\n  if (!data) return <Container></Container>;\r\n  return (\r\n    <Container>\r\n      {data.map((value, idx) => (\r\n        <div key={idx}>\r\n          <SmallTweet\r\n            value={value}\r\n            user_id={user_id}\r\n            isLogin={isLogin}\r\n            onChangeTimeLine={onChangeTimeLine}\r\n          />\r\n        </div>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n","const createRandomTweetId = () => {\r\n  const time: number = new Date().getTime();\r\n  // 출처: https://stackoverflow.com/a/21816629\r\n  const randomNumber: number = Math.floor(Math.random() * 899999 + 100000);\r\n  return parseInt(`${time}${randomNumber}`);\r\n};\r\n\r\nexport default createRandomTweetId;\r\n","import axios from 'axios';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport styled from 'styled-components';\r\nimport ProfileImage from '../../components/ProfileImage';\r\nimport createRandomTweetId from '../../util/createRandomTweetId';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 12px 16px;\r\n  border-top: 1px solid rgb(239, 243, 244);\r\n  border-bottom: 1px solid rgb(239, 243, 244);\r\n`;\r\nconst ContentsArea = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: end;\r\n  width: 100%;\r\n  margin-left: 10px;\r\n`;\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  max-width: 510px;\r\n  height: 52px;\r\n  border: 0;\r\n  min-height: 28px;\r\n  box-sizing: border-box;\r\n  padding-left: 16px;\r\n  font-size: 18px;\r\n  &&:focus {\r\n    outline: none;\r\n  }\r\n`;\r\nconst SubmitButton = styled(Button)`\r\n  width: 94px;\r\n  height: 36px;\r\n  background-color: rgb(29, 155, 240);\r\n  border-radius: 20px;\r\n  border: 0;\r\n\r\n  p {\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport default function AddTweet({\r\n  profile_color,\r\n  onChangeTimeLine,\r\n}: {\r\n  profile_color: string;\r\n  onChangeTimeLine: any;\r\n}) {\r\n  const [contents, setContents] = useState('');\r\n\r\n  const inputContents = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setContents(e.target.value);\r\n    },\r\n    []\r\n  );\r\n  const onSubmit = useCallback(async () => {\r\n    try {\r\n      const tweet_id = createRandomTweetId();\r\n      await axios.post('/tweets', { tweet_id, contents });\r\n      onChangeTimeLine();\r\n      setContents('');\r\n      return;\r\n    } catch (error: any) {\r\n      console.log(error.response.data);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n      alert(error.response.data);\r\n      return;\r\n    }\r\n  }, [contents, onChangeTimeLine]);\r\n\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <ProfileImage size=\"small\" color={profile_color} />\r\n        <ContentsArea>\r\n          <Input\r\n            value={contents}\r\n            placeholder=\"무슨 일이 일어나고 있나요?\"\r\n            type=\"text\"\r\n            onChange={inputContents}\r\n            maxLength={140}\r\n          />\r\n          <SubmitButton onClick={onSubmit}>\r\n            <p>트윗하기</p>\r\n          </SubmitButton>\r\n        </ContentsArea>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\n\r\nconst Button = styled.button`\r\n  background-color: rgb(29, 155, 240);\r\n  align-self: center;\r\n  width: 91px;\r\n  height: 30px;\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport default function JoinButton() {\r\n  const history = useHistory();\r\n  // @ts-ignore\r\n  const [, authDispatch] = useAuthContext();\r\n\r\n  const moveToPage = useCallback(() => {\r\n    return history.push('/join');\r\n  }, [history]);\r\n\r\n  return (\r\n    <Button onClick={moveToPage}>\r\n      <span>회원가입</span>\r\n    </Button>\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\n\r\nconst Button = styled.button`\r\n  background-color: rgb(29, 155, 240);\r\n  align-self: center;\r\n  width: 91px;\r\n  height: 30px;\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport default function LoginButton() {\r\n  const history = useHistory();\r\n  // @ts-ignore\r\n  const [, authDispatch] = useAuthContext();\r\n\r\n  const moveToPage = useCallback(() => {\r\n    return history.push('/login');\r\n  }, [history]);\r\n\r\n  return (\r\n    <Button onClick={moveToPage}>\r\n      <span>로그인</span>\r\n    </Button>\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\n\r\nconst Button = styled.button`\r\n  background-color: rgb(29, 155, 240);\r\n  align-self: center;\r\n  width: 91px;\r\n  height: 30px;\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport default function LogoutButton() {\r\n  const history = useHistory();\r\n  // @ts-ignore\r\n  const [, authDispatch] = useAuthContext();\r\n\r\n  const onStartLogout = useCallback(async () => {\r\n    try {\r\n      const response = await axios.post('/auth/logout');\r\n      console.log('로그아웃 결과', response.data);\r\n      authDispatch({ type: 'LOGOUT' });\r\n      history.push('/login');\r\n      return;\r\n    } catch (error) {\r\n      console.log('에러', error);\r\n      return;\r\n    }\r\n  }, [authDispatch, history]);\r\n\r\n  return (\r\n    <Button onClick={onStartLogout}>\r\n      <span>로그아웃</span>\r\n    </Button>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport JoinButton from './JoinButton';\r\nimport LoginButton from './LoginButton';\r\nimport LogoutButton from './LogoutButton';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: end;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 10px 0;\r\n`;\r\n\r\nexport default function Header({ isLogin }: { isLogin: boolean }) {\r\n  return (\r\n    <Container>\r\n      {isLogin ? (\r\n        <LogoutButton />\r\n      ) : (\r\n        <>\r\n          <>\r\n            <LoginButton />\r\n          </>\r\n          <div style={{ marginLeft: 5 }}>\r\n            <JoinButton />\r\n          </div>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport useSWR, { useSWRConfig } from 'swr';\r\nimport TweetList from '../../components/Tweet/TweetList';\r\nimport AddTweet from './AddTweet';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\nimport Header from '../../components/Header/Header';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default function Home() {\r\n  const history = useHistory();\r\n  // @ts-ignore\r\n  const [authStore, authDispatch] = useAuthContext();\r\n  const { mutate } = useSWRConfig();\r\n  const { data, error } = useSWR('/timelines', (url) =>\r\n    axios.get(url).then((res) => res.data)\r\n  );\r\n\r\n  const onChangeTimeLine = useCallback(() => {\r\n    mutate('/timelines');\r\n    return;\r\n  }, [mutate]);\r\n\r\n  useEffect(() => {\r\n    if (!authStore.isLogin) {\r\n      history.push('/login');\r\n    }\r\n  }, [authStore, history]);\r\n\r\n  if (!data) return <></>;\r\n  if (error)\r\n    return (\r\n      <Container>\r\n        <Header isLogin={authStore?.isLogin} />\r\n        <h5 style={{ marginTop: 30 }}>에러가 발생했습니다.</h5>\r\n      </Container>\r\n    );\r\n  return (\r\n    <Container>\r\n      <Header isLogin={authStore?.isLogin} />\r\n      {/* {authStore?.isLogin && (\r\n        )} */}\r\n      <AddTweet\r\n        profile_color={authStore?.user?.profile_color}\r\n        onChangeTimeLine={onChangeTimeLine}\r\n      />\r\n      {/* @ts-ignore */}\r\n      {data && data.length === 0 && <h5>타임라인에 트윗이 없습니다.</h5>}\r\n      <TweetList\r\n        data={data}\r\n        user_id={authStore?.user?.user_id}\r\n        isLogin={authStore?.isLogin}\r\n        onChangeTimeLine={onChangeTimeLine}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Logo blue.bf36f3f6.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background-color: rgb(29, 155, 240);\r\n  align-self: center;\r\n  width: 100%;\r\n  height: 52px;\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n`;\r\n// @ts-ignore\r\nexport default function AuthButton({ text, onClick }) {\r\n  return <Button onClick={onClick}>{text}</Button>;\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  height: 43px;\r\n  box-sizing: border-box;\r\n  margin-bottom: 12px;\r\n  border-radius: 3px;\r\n  padding-left: 16px;\r\n  font-size: 14px;\r\n`;\r\n// @ts-ignore\r\nexport default function AuthInput({ value, placeholder, type, onChange }) {\r\n  return (\r\n    <Input\r\n      value={value}\r\n      placeholder={placeholder}\r\n      type={type}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport React, { useState, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport logo from '../../assets/Logo blue.svg';\r\nimport AuthButton from '../../components/AuthButton';\r\nimport AuthInput from '../../components/AuthInput';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 5%;\r\n`;\r\nconst WrapperDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-width: 300px;\r\n  width: 25%;\r\n  box-sizing: border-box;\r\n  padding: 50px 10px;\r\n  margin: 0 auto;\r\n`;\r\nconst LogoSvg = styled.img`\r\n  width: 80px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nexport default function Join() {\r\n  const history = useHistory();\r\n  const [profileColor, setProfileColor] = useState('#17517e');\r\n  const [userId, setUserId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onChangeUserId = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setUserId(e.target.value);\r\n    },\r\n    []\r\n  );\r\n  const onChangeName = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(e.target.value);\r\n  }, []);\r\n  const onChangeEmail = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setEmail(e.target.value);\r\n    },\r\n    []\r\n  );\r\n  const onChangePassword = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setPassword(e.target.value);\r\n    },\r\n    []\r\n  );\r\n\r\n  const onSubmit = useCallback(\r\n    async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      e.preventDefault();\r\n      try {\r\n        await axios.post('/users', {\r\n          email,\r\n          password,\r\n          name,\r\n          user_id: userId,\r\n          profile_color: profileColor,\r\n        });\r\n        alert('회원 가입이 완료되었습니다. 로그인 페이지로 이동합니다.');\r\n        history.push('/login');\r\n        return;\r\n      } catch (error: any) {\r\n        console.log(error.response.data);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n        alert(error.response.data);\r\n        return;\r\n      }\r\n    },\r\n    [email, history, name, password, profileColor, userId]\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <WrapperDiv>\r\n        <LogoSvg src={logo} />\r\n        <form>\r\n          <AuthInput\r\n            placeholder=\"아이디를 입력하세요\"\r\n            value={userId}\r\n            type=\"text\"\r\n            onChange={onChangeUserId}\r\n          />\r\n          <AuthInput\r\n            placeholder=\"이름을 입력하세요\"\r\n            value={name}\r\n            type=\"text\"\r\n            onChange={onChangeName}\r\n          />\r\n          <AuthInput\r\n            placeholder=\"이메일를 입력하세요\"\r\n            value={email}\r\n            type=\"text\"\r\n            onChange={onChangeEmail}\r\n          />\r\n          <AuthInput\r\n            placeholder=\"비밀번호를 입력하세요\"\r\n            value={password}\r\n            type=\"password\"\r\n            onChange={onChangePassword}\r\n          />\r\n          <AuthButton text=\"회원가입\" onClick={onSubmit} />\r\n        </form>\r\n      </WrapperDiv>\r\n    </Container>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport React, { useState, useCallback, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport logo from '../../assets/Logo blue.svg';\r\nimport AuthButton from '../../components/AuthButton';\r\nimport AuthInput from '../../components/AuthInput';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 5%;\r\n`;\r\nconst WrapperDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-width: 300px;\r\n  width: 30%;\r\n  box-sizing: border-box;\r\n  padding: 50px 10px;\r\n  margin: 0 auto;\r\n`;\r\nconst LogoSvg = styled.img`\r\n  width: 80px;\r\n  margin-bottom: 50px;\r\n`;\r\nconst JoinWrapper = styled.div`\r\n  margin-top: 10px;\r\n  span {\r\n    cursor: pointer;\r\n    color: #1a0dab;\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const [email, seEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  // @ts-ignore\r\n  const [authStore, authDispatch] = useAuthContext();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const onChangeUserId = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      seEmail(e.target.value);\r\n    },\r\n    []\r\n  );\r\n  const onChangePassword = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setPassword(e.target.value);\r\n    },\r\n    []\r\n  );\r\n  const onSubmit = useCallback(\r\n    async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      e.preventDefault();\r\n      try {\r\n        const response = await axios.post('/auth/login', { email, password });\r\n        // console.log('response', response.data);\r\n        authDispatch({ type: 'LOGIN', payload: response.data });\r\n\r\n        return history.push('/home');\r\n      } catch (error: any) {\r\n        console.log(error.response.data);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n        alert(error.response.data);\r\n        return;\r\n      }\r\n    },\r\n    [authDispatch, email, history, password]\r\n  );\r\n\r\n  const moveToJoin = useCallback(() => {\r\n    history.push('/join');\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    if (authStore?.isLogin) {\r\n      history.push('/home');\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [authStore, history]);\r\n\r\n  if (loading) return <></>;\r\n\r\n  return (\r\n    <Container>\r\n      <WrapperDiv>\r\n        <LogoSvg src={logo} />\r\n        <form>\r\n          <AuthInput\r\n            placeholder=\"이메일를 입력하세요\"\r\n            value={email}\r\n            type=\"text\"\r\n            onChange={onChangeUserId}\r\n          />\r\n          <AuthInput\r\n            placeholder=\"비밀번호를 입력하세요\"\r\n            value={password}\r\n            type=\"password\"\r\n            onChange={onChangePassword}\r\n          />\r\n          <AuthButton text=\"로그인\" onClick={onSubmit} />\r\n          <JoinWrapper>\r\n            <span onClick={moveToJoin}>아이디가 없으신가요? 회원가입하기</span>\r\n          </JoinWrapper>\r\n        </form>\r\n      </WrapperDiv>\r\n    </Container>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport React, { useCallback, useMemo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button<{ isFollow: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  align-self: center;\r\n  width: 94px;\r\n  height: 36px;\r\n  border-radius: 9999px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  background-color: ${(props) => (props.isFollow ? '#fff' : '#000')};\r\n  color: ${(props) => (props.isFollow ? '#000' : '#fff')};\r\n`;\r\nconst ProfileEditButton = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  align-self: center;\r\n  width: 120px;\r\n  height: 36px;\r\n  border-radius: 9999px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  background-color: #fff;\r\n  color: #000;\r\n`;\r\n\r\ninterface IFollowButtonProps {\r\n  login_user_id: string;\r\n  target_user_id: string;\r\n  follower: string[];\r\n  isLoginedUserProfile?: boolean;\r\n  onChangeStatus?: any;\r\n}\r\n\r\nexport default function FollowButton({\r\n  login_user_id,\r\n  target_user_id,\r\n  follower,\r\n  isLoginedUserProfile,\r\n  onChangeStatus,\r\n}: IFollowButtonProps) {\r\n  const history = useHistory();\r\n  const isFollow = useMemo(() => {\r\n    console.log('대상 사용자의 팔로워: ', follower);\r\n    if (follower && follower.includes(login_user_id)) {\r\n      return true;\r\n    } else return false;\r\n  }, [follower, login_user_id]);\r\n\r\n  const onChangeFollowStatus = useCallback(async () => {\r\n    try {\r\n      if (isFollow) await axios.patch('/users/unfollow', { target_user_id });\r\n      else await axios.patch('/users/follow', { target_user_id });\r\n      onChangeStatus();\r\n      return;\r\n    } catch (error: any) {\r\n      console.log(error.response.data);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n      alert(error.response.data);\r\n      return;\r\n    }\r\n  }, [isFollow, onChangeStatus, target_user_id]);\r\n\r\n  const moveToEditPage = useCallback(\r\n    (e: React.MouseEvent<HTMLElement>) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      history.push('/setting');\r\n    },\r\n    [history]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {isLoginedUserProfile ? (\r\n        <ProfileEditButton onClick={moveToEditPage}>\r\n          <span>프로필 수정</span>\r\n        </ProfileEditButton>\r\n      ) : (\r\n        <Button isFollow={isFollow} onClick={onChangeFollowStatus}>\r\n          {isFollow ? '팔로잉' : '팔로우'}\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport FollowButton from '../../components/Buttons/FollowButton';\r\nimport ProfileImage from '../../components/ProfileImage';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  min-height: 200px;\r\n  box-sizing: border-box;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  padding-top: 12px;\r\n  margin-bottom: 16px;\r\n`;\r\nconst ProfileWrapper = styled.div`\r\n  position: relative;\r\n  .profile-user-name {\r\n    font-weight: bold;\r\n  }\r\n  .profile-user-id {\r\n    color: rgb(83, 100, 113);\r\n  }\r\n`;\r\nconst DescriptionWrapper = styled.div`\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  span {\r\n    font-size: 1.1rem;\r\n  }\r\n`;\r\nconst FollowButtonWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: 10%;\r\n  right: 0;\r\n`;\r\n\r\nconst FollowCountWrapper = styled.div`\r\n  width: 100%;\r\n  height: 48px;\r\n`;\r\nconst CountArea = styled.div`\r\n  display: inline-block;\r\n  .count {\r\n    font-weight: bold;\r\n  }\r\n  .count-text {\r\n    margin-left: 3px;\r\n  }\r\n`;\r\n\r\ninterface IUserProfileProps {\r\n  login_user_id: string;\r\n  user_id: string;\r\n  name: string;\r\n  profile_color: string;\r\n  description: string;\r\n  following?: string[];\r\n  follower: string[];\r\n  follower_count: number;\r\n  following_count: number;\r\n  isLoginedUserProfile?: boolean;\r\n  onChangeStatus?: any;\r\n}\r\nexport default function UserProfile({\r\n  login_user_id,\r\n  user_id,\r\n  name,\r\n  profile_color,\r\n  description,\r\n  follower,\r\n  follower_count,\r\n  following_count,\r\n  isLoginedUserProfile,\r\n  onChangeStatus,\r\n}: IUserProfileProps) {\r\n  return (\r\n    <Container>\r\n      <ProfileWrapper>\r\n        <>\r\n          <ProfileImage size=\"big\" color={profile_color} />\r\n          <div style={{ marginTop: 10 }}>\r\n            <span className=\"profile-user-name\">{name}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"profile-user-id\">{`@${user_id}`}</span>\r\n          </div>\r\n        </>\r\n        <FollowButtonWrapper>\r\n          <FollowButton\r\n            target_user_id={user_id}\r\n            isLoginedUserProfile={isLoginedUserProfile}\r\n            follower={follower}\r\n            login_user_id={login_user_id}\r\n            onChangeStatus={onChangeStatus}\r\n          />\r\n        </FollowButtonWrapper>\r\n      </ProfileWrapper>\r\n      <DescriptionWrapper>\r\n        <span>{description}</span>\r\n      </DescriptionWrapper>\r\n      <FollowCountWrapper>\r\n        {following_count > 0 && (\r\n          <CountArea className=\"count-area\">\r\n            <span className=\"count\">{following_count}</span>\r\n            <span className=\"count-text\">팔로우 중</span>\r\n          </CountArea>\r\n        )}\r\n        {follower_count > 0 && (\r\n          <CountArea className=\"count-area\" style={{ marginLeft: 10 }}>\r\n            <span className=\"count\">{follower_count}</span>\r\n            <span className=\"count-text\">팔로워</span>\r\n          </CountArea>\r\n        )}\r\n      </FollowCountWrapper>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport useSWR, { useSWRConfig, SWRConfig } from 'swr';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\nimport TweetList from '../../components/Tweet/TweetList';\r\nimport Header from '../../components/Header/Header';\r\nimport UserProfile from './UserProfile';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default function User() {\r\n  const params: { userid: string } = useParams();\r\n  // @ts-ignore\r\n  const [authStore, authDispatch] = useAuthContext();\r\n  const { mutate } = useSWRConfig();\r\n  const { data, error } = useSWR(`/timelines/${params.userid}`, (url) =>\r\n    axios.get(url).then((res) => res.data)\r\n  );\r\n\r\n  const onChangeTimeLine = useCallback(() => {\r\n    mutate(`/timelines/${params.userid}`);\r\n    return;\r\n  }, [mutate, params.userid]);\r\n\r\n  if (!data) return <></>;\r\n  if (error)\r\n    return (\r\n      <Container>\r\n        <Header isLogin={authStore?.isLogin} />\r\n        <div style={{ marginTop: 10 }}>\r\n          <h5>에러가 발생했습니다.</h5>\r\n        </div>\r\n      </Container>\r\n    );\r\n\r\n  return (\r\n    <SWRConfig value={{ provider: () => new Map() }}>\r\n      <Container>\r\n        <Header isLogin={authStore?.isLogin} />\r\n        <UserProfile\r\n          login_user_id={authStore?.user?.user_id}\r\n          user_id={data?.user.user_id}\r\n          name={data?.user.name}\r\n          profile_color={data?.user.profile_color}\r\n          description={data?.user.description}\r\n          following={data?.user.following}\r\n          follower={data?.user.follower}\r\n          follower_count={data?.follower_count}\r\n          following_count={data?.following_count}\r\n          isLoginedUserProfile={authStore?.user?.user_id === data?.user.user_id}\r\n          onChangeStatus={onChangeTimeLine}\r\n        />\r\n        {data?.timeLine.length === 0 && <h5>타임라인에 트윗이 없습니다.</h5>}\r\n        <TweetList\r\n          data={data?.timeLine}\r\n          user_id={authStore?.user?.user_id}\r\n          isLogin={authStore?.isLogin}\r\n          onChangeTimeLine={onChangeTimeLine}\r\n        />\r\n      </Container>\r\n    </SWRConfig>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\n\r\nexport default function Main() {\r\n  const history = useHistory();\r\n  // @ts-ignore\r\n  const [authStore, authDispatch] = useAuthContext();\r\n\r\n  useEffect(() => {\r\n    if (authStore.isLogin) {\r\n      history.push('/home');\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [authStore, history]);\r\n  return <></>;\r\n}\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ITweet } from '../../types';\r\nimport ProfileImage from '../ProfileImage';\r\nimport Comment from '../Buttons/Comment';\r\nimport Retweet from '../Buttons/Retweet';\r\nimport Heart from '../Buttons/Heart';\r\nimport Share from '../Buttons/Share';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-sizing: border-box;\r\n  padding: 12px 16px;\r\n  border-top: 1px solid rgb(239, 243, 244);\r\n  border-bottom: 1px solid rgb(239, 243, 244);\r\n`;\r\nconst ProfileArea = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n`;\r\nconst UserName = styled.a`\r\n  color: black;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n`;\r\nconst UserId = styled.span`\r\n  font-size: 0.8rem;\r\n  color: rgb(83, 100, 113);\r\n`;\r\nconst ContentsArea = styled.div`\r\n  position: relative;\r\n  .contents-div {\r\n    font-size: 1.1rem;\r\n    font-weight: 500;\r\n  }\r\n  .time-div {\r\n    font-size: 0.9rem;\r\n    font-weight: 400;\r\n  }\r\n`;\r\n\r\nconst CountsWrapper = styled.div`\r\n  width: 100%;\r\n  height: 48px;\r\n  box-sizing: border-box;\r\n  padding: 12px 16px;\r\n  border-bottom: 1px solid rgb(239, 243, 244);\r\n`;\r\nconst CountArea = styled.div`\r\n  display: inline-block;\r\n  .count {\r\n    font-weight: bold;\r\n  }\r\n  .count-text {\r\n    margin-left: 3px;\r\n  }\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 48px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  border-bottom: 1px solid rgb(239, 243, 244);\r\n`;\r\n\r\ninterface ISmallTweetProps {\r\n  value: ITweet;\r\n  user_id: string;\r\n  isLogin: boolean;\r\n  onChangeTweet?: any;\r\n}\r\n\r\n//@ts-ignore\r\nexport default function DetailTweet({\r\n  value,\r\n  user_id,\r\n  isLogin,\r\n  onChangeTweet,\r\n}: ISmallTweetProps) {\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <ProfileArea>\r\n          <ProfileImage\r\n            size=\"small\"\r\n            color={value?.user?.profile_color}\r\n            user_id={value?.user?.user_id}\r\n          />\r\n          <div className=\"name-id-field\" style={{ marginLeft: 10 }}>\r\n            <div className=\"user_name\">\r\n              <UserName>{value?.user?.name}</UserName>\r\n            </div>\r\n            <div className=\"user_id\">\r\n              <UserId>{`@${value?.user?.user_id}`}</UserId>\r\n            </div>\r\n          </div>\r\n        </ProfileArea>\r\n\r\n        <ContentsArea>\r\n          <div className=\"contents-div\" style={{ marginTop: 5 }}>\r\n            <span>{value?.contents}</span>\r\n          </div>\r\n          <div className=\"time-div\" style={{ marginTop: 5 }}>\r\n            <span>{value?.create_date}</span>\r\n          </div>\r\n        </ContentsArea>\r\n      </Wrapper>\r\n\r\n      <CountsWrapper>\r\n        {value?.retweet_count === 0 && value?.like_count === 0 && (\r\n          <p>트윗 활동이 없습니다.</p>\r\n        )}\r\n        {value?.retweet_count > 0 && (\r\n          <CountArea className=\"count-area\">\r\n            <span className=\"count\">{value?.retweet_count}</span>\r\n            <span className=\"count-text\">리트윗</span>\r\n          </CountArea>\r\n        )}\r\n        {value?.like_count > 0 && (\r\n          <CountArea className=\"count-area\" style={{ marginLeft: 10 }}>\r\n            <span className=\"count\">{value?.like_count}</span>\r\n            <span className=\"count-text\">마음에 들어요</span>\r\n          </CountArea>\r\n        )}\r\n      </CountsWrapper>\r\n\r\n      <ButtonWrapper>\r\n        <Comment comments={value?.comments} showCount={false} />\r\n        <Retweet\r\n          retweet={value?.retweet}\r\n          user_id={user_id}\r\n          isLogin={isLogin}\r\n          showCount={false}\r\n          tweet_id={value?.tweet_id}\r\n          onChangeTimeLine={onChangeTweet}\r\n        />\r\n        <Heart\r\n          like={value?.like}\r\n          user_id={user_id}\r\n          isLogin={isLogin}\r\n          showCount={false}\r\n          tweet_id={value?.tweet_id}\r\n          onChangeTimeLine={onChangeTweet}\r\n        />\r\n        <Share />\r\n      </ButtonWrapper>\r\n    </Container>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport styled from 'styled-components';\r\nimport ProfileImage from '../../components/ProfileImage';\r\nimport createRandomTweetId from '../../util/createRandomTweetId';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 12px 16px;\r\n  border-top: 1px solid rgb(239, 243, 244);\r\n  border-bottom: 1px solid rgb(239, 243, 244);\r\n`;\r\nconst ContentsArea = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: end;\r\n  width: 100%;\r\n  margin-left: 10px;\r\n`;\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  max-width: 510px;\r\n  height: 52px;\r\n  border: 0;\r\n  min-height: 28px;\r\n  box-sizing: border-box;\r\n  padding-left: 16px;\r\n  font-size: 18px;\r\n  &&:focus {\r\n    outline: none;\r\n  }\r\n`;\r\nconst SubmitButton = styled(Button)`\r\n  width: 94px;\r\n  height: 36px;\r\n  background-color: rgb(29, 155, 240);\r\n  border-radius: 20px;\r\n  border: 0;\r\n\r\n  p {\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n`;\r\ninterface IAddCommentProp {\r\n  profile_color: string;\r\n  target_tweet_id: number;\r\n  onChangeTweet: any;\r\n}\r\nexport default function AddComment({\r\n  profile_color,\r\n  target_tweet_id,\r\n  onChangeTweet,\r\n}: IAddCommentProp) {\r\n  const [contents, setContents] = useState('');\r\n\r\n  const inputContents = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setContents(e.target.value);\r\n    },\r\n    []\r\n  );\r\n\r\n  const onSubmit = useCallback(async () => {\r\n    try {\r\n      const tweet_id = createRandomTweetId();\r\n      await axios.post('/tweets/comment', {\r\n        tweet_id,\r\n        contents,\r\n        target_tweet_id,\r\n      });\r\n      onChangeTweet();\r\n      setContents('');\r\n      return;\r\n    } catch (error: any) {\r\n      console.log(error.response.data);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n      alert(error.response.data);\r\n      return;\r\n    }\r\n  }, [contents, onChangeTweet, target_tweet_id]);\r\n\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <ProfileImage size=\"small\" color={profile_color} />\r\n        <ContentsArea>\r\n          <Input\r\n            value={contents}\r\n            placeholder=\"내 답글을 트윗합니다.\"\r\n            type=\"text\"\r\n            onChange={inputContents}\r\n            maxLength={140}\r\n          />\r\n          <SubmitButton onClick={onSubmit}>\r\n            <p>답글</p>\r\n          </SubmitButton>\r\n        </ContentsArea>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport useSWR, { useSWRConfig } from 'swr';\r\nimport Header from '../../components/Header/Header';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\nimport DetailTweet from '../../components/Tweet/DetailTweet';\r\nimport AddComment from './AddComment';\r\nimport TweetList from '../../components/Tweet/TweetList';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n`;\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  border-left: 1px solid rgb(239, 243, 244);\r\n  border-right: 1px solid rgb(239, 243, 244);\r\n`;\r\n\r\nexport default function Tweet() {\r\n  // @ts-ignore\r\n  const [authStore, authDispatch] = useAuthContext();\r\n  const params: { user: string; tweetid: string } = useParams();\r\n  const { mutate } = useSWRConfig();\r\n  const { data, error } = useSWR(`/tweets/${params.tweetid}`, (url) =>\r\n    axios.get(url).then((res) => res.data)\r\n  );\r\n\r\n  const onChangeTweet = useCallback(() => {\r\n    // 답글을 작성한 후 트윗을 갱신합니다.\r\n    mutate(`/tweets/${params.tweetid}`);\r\n    return;\r\n  }, [mutate, params.tweetid]);\r\n\r\n  if (!data) return <></>;\r\n  if (error)\r\n    return (\r\n      <Container>\r\n        <Header isLogin={authStore?.isLogin} />\r\n        <Wrapper>\r\n          <h5 style={{ marginTop: 30 }}>에러가 발생했습니다.</h5>\r\n        </Wrapper>\r\n      </Container>\r\n    );\r\n\r\n  return (\r\n    <Container>\r\n      <Header isLogin={authStore?.isLogin} />\r\n      <Wrapper>\r\n        <DetailTweet\r\n          value={data?.origin}\r\n          user_id={authStore?.user?.user_id}\r\n          isLogin={authStore?.isLogin}\r\n          onChangeTweet={onChangeTweet}\r\n        />\r\n        {authStore?.isLogin && (\r\n          <AddComment\r\n            profile_color={authStore?.user?.profile_color}\r\n            target_tweet_id={data?.origin?.tweet_id}\r\n            onChangeTweet={onChangeTweet}\r\n          />\r\n        )}\r\n        {/* comments 에다 각각 작은트윗 불러오기 */}\r\n        <TweetList\r\n          data={data?.comments}\r\n          user_id={authStore?.user?.user_id}\r\n          isLogin={authStore?.isLogin}\r\n          onChangeTimeLine={onChangeTweet}\r\n        />\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Route, Switch } from 'react-router-dom';\nimport { useAuthContext } from './context/AuthContext';\nimport Home from './pages/Home';\nimport Join from './pages/Join';\nimport Login from './pages/Login';\nimport User from './pages/User';\nimport Main from './pages/Main';\nimport Tweet from './pages/Tweet';\n\nfunction App() {\n  // @ts-ignore\n  const [, authDispatch] = useAuthContext();\n  const [loading, setLoading] = useState(true);\n\n  const sessionLogin = useCallback(async () => {\n    try {\n      const response = await axios.get('/auth/token');\n      // console.log('서버의 세션으로 정보 불러오기 결과', response.data);\n      authDispatch({ type: 'LOGIN', payload: response.data });\n      setTimeout(() => {\n        setLoading(false);\n      }, 100);\n      return;\n    } catch (error) {\n      setLoading(false);\n      return;\n    }\n  }, [authDispatch]);\n\n  useEffect(() => {\n    sessionLogin();\n  }, [sessionLogin]);\n\n  if (loading) return <></>;\n\n  return (\n    <Switch>\n      <Route path=\"/\" component={Main} exact />\n      <Route path=\"/home\" component={Home} exact />\n      <Route path=\"/login\" component={Login} exact />\n      <Route path=\"/join\" component={Join} exact />\n      <Route path=\"/:userid\" component={User} exact />\n      <Route path=\"/:user/status/:tweetid\" component={Tweet} exact />\n    </Switch>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './context/AuthContext';\n\naxios.defaults.withCredentials = true;\naxios.defaults.baseURL = '/api';\n// axios.defaults.baseURL = 'http://localhost:5000/api';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AuthProvider>\n        <App />\n        <ToastContainer hideProgressBar />\n      </AuthProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}